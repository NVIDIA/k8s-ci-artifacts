# Copyright 2024 NVIDIA CORPORATION
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Golang

on:
  push:
    branches:
      - "pull-request/[0-9]+"
      - main
      - release-*

jobs:
  check:
    runs-on: linux-amd64-cpu4
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Get Golang version
      id: vars
      run: |
        GOLANG_VERSION=$( grep "GOLANG_VERSION ?=" versions.mk )
        echo "GOLANG_VERSION=${GOLANG_VERSION##GOLANG_VERSION ?= }" >> $GITHUB_ENV

    - name: Install Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ env.GOLANG_VERSION }}

    - name: Lint
      uses: golangci/golangci-lint-action@v6
      with:
        version: latest
        args: -v --timeout 5m
        skip-cache: true

    - name: Check golang modules
      run: make check-vendor

    - name: Check workflow status
      run: |
        if [ "${{ job.status }}" = "success" ]; then
            STATUS_MESSAGE=":green-check-mark: On repository ${{ github.repository }} the Workflow ${{ github.workflow }} has completed successfully."
        else
            STATUS_MESSAGE=":red_target: On repository ${{ github.repository }} the Workflow ${{ github.workflow }} has failed."
        fi
        echo "STATUS_MESSAGE=$STATUS_MESSAGE" >> $GITHUB_ENV

    - name: Send Slack alert notification
      id: slack
      if: github.event_name == 'push'
      uses: slackapi/slack-github-action@v1.26.0
      env:
        SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
        SUMMARY_URL: https://github.com/${{github.repository}}/actions/runs/${{github.run_id}}
      with:
        channel-id: ${{ secrets.SLACK_CHANNEL_ID }}
        #slack-message: "GitHub build result: ${{ job.status }}\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}"
        slack-message: |
          ${{ env.STATUS_MESSAGE }}

          Details: ${{ env.SUMMARY_URL }}
